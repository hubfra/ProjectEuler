
/*
	Title:
		Highly divisible triangular number

	Description:
		The sequence of triangle numbers is generated by adding the natural numbers.
		So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

					1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

		Let us list the factors of the first seven triangle numbers:

			 1: 1
			 3: 1,3
			 6: 1,2,3,6
			10: 1,2,5,10
			15: 1,3,5,15
			21: 1,3,7,21
			28: 1,2,4,7,14,28

		We can see that 28 is the first triangle number to have over five divisors.

		What is the value of the first triangle number to have over five hundred divisors?

	Date:
		04-05-2020
*/


#include <iostream>
#include <vector>

int FactorsAmount(long long number);

int main()
{
	long long triangle = 0;

	for (int a = 1; FactorsAmount(triangle) < 501; ++a) {
		triangle += a;
	}

	std::cout << triangle << '\n';

	return 0;
}

int FactorsAmount(long long n)
{
	int factors_amount = 1;

	long long sqrt_n = sqrt(n) + 1;
	long long last_factor = 1;

	for (int a = 2; a < sqrt_n; ++a) {
		if (n % a == 0) {
			++factors_amount;
			last_factor = a;
		}
	}

	if (n / last_factor == last_factor)
		factors_amount = (factors_amount * 2) - 1;
	else
		factors_amount *= 2;


	return factors_amount;
}